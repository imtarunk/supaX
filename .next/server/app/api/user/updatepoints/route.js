(()=>{var e={};e.id=612,e.ids=[612],e.modules={3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},12909:(e,t,r)=>{"use strict";r.d(t,{H:()=>n});var s=r(94747);async function n(){try{let e=await s.z.user.findFirst({orderBy:{updatedAt:"desc"}});if(!e)return null;if(e.tokenExpires&&e.tokenExpires<new Date){if(e.refreshToken)try{let t=await fetch(`https://${process.env.AUTH0_DOMAIN}/oauth/token`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({grant_type:"refresh_token",client_id:process.env.AUTH0_CLIENT_ID,client_secret:process.env.AUTH0_CLIENT_SECRET,refresh_token:e.refreshToken})}),r=await t.json();console.log("Tokens refreshed:",r);let n=new Date;n.setSeconds(n.getSeconds()+r.expires_in);let o=await s.z.user.update({where:{id:e.id},data:{accessToken:r.access_token,idToken:r.id_token,refreshToken:r.refresh_token,tokenExpires:n}});return console.log("User tokens updated:",o),o}catch(e){console.error("Error refreshing tokens:",e)}return null}return e}catch(e){return console.error("Error getting current user:",e),null}}},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},78335:()=>{},89531:(e,t,r)=>{"use strict";r.r(t),r.d(t,{patchFetch:()=>h,routeModule:()=>c,serverHooks:()=>f,workAsyncStorage:()=>l,workUnitAsyncStorage:()=>k});var s={};r.r(s),r.d(s,{POST:()=>p});var n=r(96559),o=r(48088),a=r(37719),i=r(12909),u=r(94747),d=r(32190);async function p(e){try{let t=await (0,i.H)();if(!t)return d.NextResponse.json({error:"Unauthorized"},{status:401});let{taskId:r,points:s}=await e.json();if(console.log("Received taskId:",r),console.log("Received points:",s),console.log("User ID:",t.id),!r)return d.NextResponse.json({error:"Task ID is required"},{status:400});let n=await u.z.userTask.findFirst({where:{userId:t.id,taskId:r}});if(console.log("Existing UserTask:",n),!n){let e=await u.z.task.findUnique({where:{id:r}});if(console.log("Task exists:",e),!e)return d.NextResponse.json({error:"Task not found"},{status:404});let n=await u.z.userTask.create({data:{userId:t.id,taskId:r,completed:!0}});return console.log("Created new UserTask:",n),await u.z.user.update({where:{id:t.id},data:{points:{increment:s}}}),d.NextResponse.json({message:"Points updated successfully",points:t.points},{status:200})}return await u.z.userTask.update({where:{id:n.id},data:{completed:!0}}),await u.z.user.update({where:{id:t.id},data:{points:{increment:s}}}),d.NextResponse.json({message:"Points updated successfully",points:t.points},{status:200})}catch(e){return console.error("Error updating points:",e),d.NextResponse.json({error:"Internal server error"},{status:500})}}let c=new n.AppRouteRouteModule({definition:{kind:o.RouteKind.APP_ROUTE,page:"/api/user/updatepoints/route",pathname:"/api/user/updatepoints",filename:"route",bundlePath:"app/api/user/updatepoints/route"},resolvedPagePath:"/Users/tarunksaini/Codex/100xdev/project-code/superfi/src/app/api/user/updatepoints/route.ts",nextConfigOutput:"",userland:s}),{workAsyncStorage:l,workUnitAsyncStorage:k,serverHooks:f}=c;function h(){return(0,a.patchFetch)({workAsyncStorage:l,workUnitAsyncStorage:k})}},94747:(e,t,r)=>{"use strict";r.d(t,{z:()=>n});let s=require("@prisma/client"),n=globalThis.prisma??new s.PrismaClient},96487:()=>{}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[243,580],()=>r(89531));module.exports=s})();